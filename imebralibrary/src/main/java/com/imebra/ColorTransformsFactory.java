/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public class ColorTransformsFactory {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ColorTransformsFactory(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ColorTransformsFactory obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        imebraJNI.delete_ColorTransformsFactory(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static String normalizeColorSpace(String colorSpace) {
    return imebraJNI.ColorTransformsFactory_normalizeColorSpace(colorSpace);
  }

  public static boolean isMonochrome(String colorSpace) {
    return imebraJNI.ColorTransformsFactory_isMonochrome(colorSpace);
  }

  public static boolean isSubsampledX(String colorSpace) {
    return imebraJNI.ColorTransformsFactory_isSubsampledX(colorSpace);
  }

  public static boolean isSubsampledY(String colorSpace) {
    return imebraJNI.ColorTransformsFactory_isSubsampledY(colorSpace);
  }

  public static boolean canSubsample(String colorSpace) {
    return imebraJNI.ColorTransformsFactory_canSubsample(colorSpace);
  }

  public static String makeSubsampled(String colorSpace, boolean bSubsampleX, boolean bSubsampleY) {
    return imebraJNI.ColorTransformsFactory_makeSubsampled(colorSpace, bSubsampleX, bSubsampleY);
  }

  public static long getNumberOfChannels(String colorSpace) {
    return imebraJNI.ColorTransformsFactory_getNumberOfChannels(colorSpace);
  }

  public static Transform getTransform(String startColorSpace, String endColorSpace) {
    long cPtr = imebraJNI.ColorTransformsFactory_getTransform(startColorSpace, endColorSpace);
    return (cPtr == 0) ? null : new Transform(cPtr, true);
  }

  public ColorTransformsFactory() {
    this(imebraJNI.new_ColorTransformsFactory(), true);
  }

}
