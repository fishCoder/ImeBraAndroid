/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public class Image {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Image(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Image obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        imebraJNI.delete_Image(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Image(long width, long height, bitDepth_t depth, String colorSpace, long highBit) {
    this(imebraJNI.new_Image(width, height, depth.swigValue(), colorSpace, highBit), true);
  }

  public double getWidthMm() {
    return imebraJNI.Image_getWidthMm(swigCPtr, this);
  }

  public double getHeightMm() {
    return imebraJNI.Image_getHeightMm(swigCPtr, this);
  }

  public void setSizeMm(double width, double height) {
    imebraJNI.Image_setSizeMm(swigCPtr, this, width, height);
  }

  public long getWidth() {
    return imebraJNI.Image_getWidth(swigCPtr, this);
  }

  public long getHeight() {
    return imebraJNI.Image_getHeight(swigCPtr, this);
  }

  public ReadingDataHandlerNumeric getReadingDataHandler() {
    long cPtr = imebraJNI.Image_getReadingDataHandler(swigCPtr, this);
    return (cPtr == 0) ? null : new ReadingDataHandlerNumeric(cPtr, true);
  }

  public WritingDataHandlerNumeric getWritingDataHandler() {
    long cPtr = imebraJNI.Image_getWritingDataHandler(swigCPtr, this);
    return (cPtr == 0) ? null : new WritingDataHandlerNumeric(cPtr, true);
  }

  public String getColorSpace() {
    return imebraJNI.Image_getColorSpace(swigCPtr, this);
  }

  public long getChannelsNumber() {
    return imebraJNI.Image_getChannelsNumber(swigCPtr, this);
  }

  public bitDepth_t getDepth() {
    return bitDepth_t.swigToEnum(imebraJNI.Image_getDepth(swigCPtr, this));
  }

  public long getHighBit() {
    return imebraJNI.Image_getHighBit(swigCPtr, this);
  }

}
