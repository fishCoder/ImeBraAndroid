/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public class ReadMemory {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ReadMemory(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ReadMemory obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        imebraJNI.delete_ReadMemory(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ReadMemory() {
    this(imebraJNI.new_ReadMemory__SWIG_0(), true);
  }

  public ReadMemory(byte[] source) {
    this(imebraJNI.new_ReadMemory__SWIG_1(source), true);
  }

  public long size() {
    return imebraJNI.ReadMemory_size(swigCPtr, this);
  }

  public long data(byte[] destination) {
    return imebraJNI.ReadMemory_data(swigCPtr, this, destination);
  }

  public void regionData(byte[] destination, long sourceOffset) {
    imebraJNI.ReadMemory_regionData(swigCPtr, this, destination, sourceOffset);
  }

  public boolean empty() {
    return imebraJNI.ReadMemory_empty(swigCPtr, this);
  }

}
