/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public class WritingDataHandlerNumeric extends WritingDataHandler {
  private transient long swigCPtr;

  protected WritingDataHandlerNumeric(long cPtr, boolean cMemoryOwn) {
    super(imebraJNI.WritingDataHandlerNumeric_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(WritingDataHandlerNumeric obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        imebraJNI.delete_WritingDataHandlerNumeric(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public ReadWriteMemory getMemory() {
    long cPtr = imebraJNI.WritingDataHandlerNumeric_getMemory(swigCPtr, this);
    return (cPtr == 0) ? null : new ReadWriteMemory(cPtr, true);
  }

  public void assign(byte[] source) {
    imebraJNI.WritingDataHandlerNumeric_assign(swigCPtr, this, source);
  }

  public long data(byte[] destination) {
    return imebraJNI.WritingDataHandlerNumeric_data(swigCPtr, this, destination);
  }

  public long getUnitSize() {
    return imebraJNI.WritingDataHandlerNumeric_getUnitSize(swigCPtr, this);
  }

  public boolean isSigned() {
    return imebraJNI.WritingDataHandlerNumeric_isSigned(swigCPtr, this);
  }

  public boolean isFloat() {
    return imebraJNI.WritingDataHandlerNumeric_isFloat(swigCPtr, this);
  }

  public void copyFrom(ReadingDataHandlerNumeric source) {
    imebraJNI.WritingDataHandlerNumeric_copyFrom(swigCPtr, this, ReadingDataHandlerNumeric.getCPtr(source), source);
  }

}
