/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public enum bitDepth_t {
  depthU8(imebraJNI.bitDepth_t_depthU8_get()),
  depthS8(imebraJNI.bitDepth_t_depthS8_get()),
  depthU16(imebraJNI.bitDepth_t_depthU16_get()),
  depthS16(imebraJNI.bitDepth_t_depthS16_get()),
  depthU32(imebraJNI.bitDepth_t_depthU32_get()),
  depthS32(imebraJNI.bitDepth_t_depthS32_get());

  public final int swigValue() {
    return swigValue;
  }

  public static bitDepth_t swigToEnum(int swigValue) {
    bitDepth_t[] swigValues = bitDepth_t.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (bitDepth_t swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + bitDepth_t.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private bitDepth_t() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private bitDepth_t(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private bitDepth_t(bitDepth_t swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

