/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public enum tagVR_t {
  AE(imebraJNI.tagVR_t_AE_get()),
  AS(imebraJNI.tagVR_t_AS_get()),
  AT(imebraJNI.tagVR_t_AT_get()),
  CS(imebraJNI.tagVR_t_CS_get()),
  DA(imebraJNI.tagVR_t_DA_get()),
  DS(imebraJNI.tagVR_t_DS_get()),
  DT(imebraJNI.tagVR_t_DT_get()),
  FL(imebraJNI.tagVR_t_FL_get()),
  FD(imebraJNI.tagVR_t_FD_get()),
  IS(imebraJNI.tagVR_t_IS_get()),
  LO(imebraJNI.tagVR_t_LO_get()),
  LT(imebraJNI.tagVR_t_LT_get()),
  OB(imebraJNI.tagVR_t_OB_get()),
  SB(imebraJNI.tagVR_t_SB_get()),
  OD(imebraJNI.tagVR_t_OD_get()),
  OF(imebraJNI.tagVR_t_OF_get()),
  OL(imebraJNI.tagVR_t_OL_get()),
  OW(imebraJNI.tagVR_t_OW_get()),
  PN(imebraJNI.tagVR_t_PN_get()),
  SH(imebraJNI.tagVR_t_SH_get()),
  SL(imebraJNI.tagVR_t_SL_get()),
  SQ(imebraJNI.tagVR_t_SQ_get()),
  SS(imebraJNI.tagVR_t_SS_get()),
  ST(imebraJNI.tagVR_t_ST_get()),
  TM(imebraJNI.tagVR_t_TM_get()),
  UC(imebraJNI.tagVR_t_UC_get()),
  UI(imebraJNI.tagVR_t_UI_get()),
  UL(imebraJNI.tagVR_t_UL_get()),
  UN(imebraJNI.tagVR_t_UN_get()),
  UR(imebraJNI.tagVR_t_UR_get()),
  US(imebraJNI.tagVR_t_US_get()),
  UT(imebraJNI.tagVR_t_UT_get());

  public final int swigValue() {
    return swigValue;
  }

  public static tagVR_t swigToEnum(int swigValue) {
    tagVR_t[] swigValues = tagVR_t.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (tagVR_t swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + tagVR_t.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private tagVR_t() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private tagVR_t(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private tagVR_t(tagVR_t swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

